<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boco.eoms.rule.cwmsysrulegroupoutput.mapper.CwmRuleGroupOutputMapper">
  <resultMap id="BaseResultMap" type="com.boco.eoms.rule.cwmsysrulegroupoutput.model.CwmRuleGroupOutput">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="GROUP_OUTPUT_RESULT" jdbcType="VARCHAR" property="groupOutputResult" />
    <result column="GROUP_OUTPUT_EXPLAIN" jdbcType="VARCHAR" property="groupOutputExplain" />
    <result column="GROUP_OUTPUT_PARAMS_ID" jdbcType="VARCHAR" property="groupOutputParamsId" />
    <result column="GROUP_OUTPUT_PARAMS_RESULT" jdbcType="VARCHAR" property="groupOutputParamsResult" />
    <result column="DELETED" jdbcType="VARCHAR" property="deleted" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, GROUP_ID, GROUP_OUTPUT_RESULT, 
    GROUP_OUTPUT_EXPLAIN, GROUP_OUTPUT_PARAMS_ID, GROUP_OUTPUT_PARAMS_RESULT, DELETED, 
    CREATE_USER_ID, CREATE_TIME
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CWM_RULE_GROUP_OUTPUT
    where ID = #{id,jdbcType=VARCHAR} and deleted !=1
  </select>

  <select id="selectByGroupId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CWM_RULE_GROUP_OUTPUT
    where GROUP_ID = #{groupId,jdbcType=VARCHAR} and deleted !=1
    order by create_time
  </select>

  <select id="selectByGroupIdAndResult" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CWM_RULE_GROUP_OUTPUT
    where GROUP_ID = #{groupId,jdbcType=VARCHAR} and deleted !=1 and GROUP_OUTPUT_RESULT = #{result,jdbcType=VARCHAR} 
    order by create_time
  </select>

  <update id="deleteByPrimaryKey" parameterType="java.lang.String">
    update  cwm_rule_group_output set deleted=1
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="insert" parameterType="com.boco.eoms.rule.cwmsysrulegroupoutput.model.CwmRuleGroupOutput">
    insert into CWM_RULE_GROUP_OUTPUT (ID, GROUP_ID, 
      GROUP_OUTPUT_RESULT, 
      GROUP_OUTPUT_EXPLAIN, GROUP_OUTPUT_PARAMS_ID, 
      GROUP_OUTPUT_PARAMS_RESULT, DELETED, CREATE_USER_ID, 
      CREATE_TIME)
    values (#{id,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{groupOutputResult,jdbcType=VARCHAR}, 
      #{groupOutputExplain,jdbcType=VARCHAR}, #{groupOutputParamsId,jdbcType=VARCHAR}, 
      #{groupOutputParamsResult,jdbcType=VARCHAR}, 0, #{createUserId,jdbcType=VARCHAR},
      sysdate)
  </insert>

  <insert id="batchInsert" parameterType="java.util.List" >
    insert into cwm_rule_group_output (id, group_id,
    group_output_result,group_output_explain, group_output_params_id,
    group_output_params_result, deleted, create_user_id,
    create_time)
    <foreach  collection="list" item="item" separator=" union all ">
      select  #{item.id,jdbcType=VARCHAR}, #{item.groupId,jdbcType=VARCHAR}, #{item.groupOutputResult,jdbcType=VARCHAR},
      #{item.groupOutputExplain,jdbcType=VARCHAR}, #{item.groupOutputParamsId,jdbcType=VARCHAR},
      #{item.groupOutputParamsResult,jdbcType=VARCHAR}, 0, #{item.createUserId,jdbcType=VARCHAR},
      sysdate
      from  dual
    </foreach>
  </insert>

  <update id="batchUpdate" parameterType="java.util.List">
    update CWM_RULE_GROUP_OUTPUT
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="group_id =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.groupId!=null">
            when id=#{item.id} then #{item.groupId}
          </if>
        </foreach>
      </trim>
      <trim prefix="group_output_result =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.groupOutputResult!=null">
            when id=#{item.id} then #{item.groupOutputResult}
          </if>
        </foreach>
      </trim>
      <trim prefix="group_output_explain =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.groupOutputExplain!=null">
            when id=#{item.id} then #{item.groupOutputExplain}
          </if>
        </foreach>
      </trim>
      <trim prefix="group_output_params_id =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.groupOutputParamsId!=null">
            when id=#{item.id} then #{item.groupOutputParamsId}
          </if>
        </foreach>
      </trim>
      <trim prefix="group_output_params_result =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.groupOutputParamsResult!=null">
            when id=#{item.id} then #{item.groupOutputParamsResult}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_user_id =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.createUserId!=null">
            when id=#{item.id} then #{item.createUserId}
          </if>
        </foreach>
      </trim>
    </trim>
    <where>
      <foreach collection="list" separator="or" item="item">
        id=#{item.id}
      </foreach>
    </where>
  </update>

  <update id="updateByPrimaryKey" parameterType="com.boco.eoms.rule.cwmsysrulegroupoutput.model.CwmRuleGroupOutput">
    update CWM_RULE_GROUP_OUTPUT
    set GROUP_ID = #{groupId,jdbcType=VARCHAR},
      GROUP_OUTPUT_RESULT = #{groupOutputResult,jdbcType=VARCHAR},
      GROUP_OUTPUT_EXPLAIN = #{groupOutputExplain,jdbcType=VARCHAR},
      GROUP_OUTPUT_PARAMS_ID = #{groupOutputParamsId,jdbcType=VARCHAR},
      GROUP_OUTPUT_PARAMS_RESULT = #{groupOutputParamsResult,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>